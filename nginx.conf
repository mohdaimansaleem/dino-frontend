server {
 listen 8080;
 server_name localhost;
 root /usr/share/nginx/html;
 index index.html;
 # Security headers
 add_header X-Frame-Options "SAMEORIGIN" always;
 add_header X-Content-Type-Options "nosniff" always;
 add_header X-XSS-Protection "1; mode=block" always;
 add_header Referrer-Policy "strict-origin-when-cross-origin" always;
 # API Proxy - Forward all /api/* requests to backend
 location /api/ {
  # Backend URL from environment variable or default
  set $backend_url "${BACKEND_URL}";
  if ($backend_url = "") {
   set $backend_url "https://dino-backend-api-867506203789.us-central1.run.app";
  }
  
  proxy_pass $backend_url;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Port $server_port;
  
  # Handle CORS
  proxy_set_header Access-Control-Allow-Origin *;
  proxy_set_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
  proxy_set_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
  
  # Handle preflight requests
  if ($request_method = 'OPTIONS') {
   add_header Access-Control-Allow-Origin *;
   add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
   add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
   add_header Access-Control-Max-Age 1728000;
   add_header Content-Type 'text/plain; charset=utf-8';
   add_header Content-Length 0;
   return 204;
  }
  
  # Timeout settings
  proxy_connect_timeout 60s;
  proxy_send_timeout 60s;
  proxy_read_timeout 60s;
  
  # Buffer settings
  proxy_buffering on;
  proxy_buffer_size 4k;
  proxy_buffers 8 4k;
 }
 
 # WebSocket Proxy - Forward /ws requests to backend
 location /ws {
  set $backend_url "${BACKEND_URL}";
  if ($backend_url = "") {
   set $backend_url "https://dino-backend-api-867506203789.us-central1.run.app";
  }
  
  proxy_pass $backend_url;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  
  # WebSocket timeout settings
  proxy_read_timeout 86400;
  proxy_send_timeout 86400;
 }

 # Handle React Router
 location / {
  try_files $uri $uri/ /index.html;
  # Cache control for HTML files
  location ~* \.html$ {
   add_header Cache-Control "no-cache, no-store, must-revalidate";
   add_header Pragma "no-cache";
   add_header Expires "0";
  }
 }
 # Static files caching
 location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
  expires 1y;
  add_header Cache-Control "public, immutable";
  gzip_static on;
 }
 # Health check endpoint
 location /health {
  access_log off;
  return 200 "healthy\n";
  add_header Content-Type text/plain;
 }
 # Gzip compression
 gzip on;
 gzip_vary on;
 gzip_min_length 1024;
 gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}