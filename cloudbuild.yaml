# Cloud Build configuration for Dino Frontend
steps:
  # Build the container image with dynamic backend URL
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--build-arg', 'REACT_APP_API_BASE_URL=https://dino-backend-$PROJECT_ID.a.run.app/api/v1',
      '--build-arg', 'REACT_APP_ENV=production',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-frontend:$BUILD_ID',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-frontend:latest',
      '.'
    ]

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-frontend:$BUILD_ID'
    ]

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'dino-frontend',
      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-frontend:$BUILD_ID',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '512Mi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '5',
      '--concurrency', '100',
      '--timeout', '300',
      '--port', '8080'
    ]

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Images to be pushed to registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-frontend:$BUILD_ID'