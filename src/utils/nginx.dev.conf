# Development Nginx Configuration for Local Testing

# This file can be used with docker-compose for local development



events {

  worker_connections 1024;

}



http {

  include /etc/nginx/mime.types;

  default_type application/octet-stream;



  # Logging

  access_log /var/log/nginx/access.log;

  error_log /var/log/nginx/error.log;



  # Basic settings

  sendfile on;

  keepalive_timeout 65;

  client_max_body_size 10M;



  server {

    listen 8080;

    server_name localhost;

    root /usr/share/nginx/html;

    index index.html;



    # Health check endpoint

    location /health {

      access_log off;

      return 200 '{"status":"healthy","timestamp":"$time_iso8601"}';

      add_header Content-Type application/json;

    }



    # Runtime configuration endpoint

    location /config.js {

      expires 1m;

      add_header Cache-Control "public, must-revalidate";

      add_header Content-Type application/javascript;

    }



    # API proxy to backend (development)

    location /api/ {

      # For development, you can change this to your local backend

      proxy_pass http://localhost:8000/api/;

      proxy_set_header Host $host;

      proxy_set_header X-Real-IP $remote_addr;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header X-Forwarded-Proto $scheme;

       

      # CORS headers for development

      add_header Access-Control-Allow-Origin * always;

      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;

      add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

       

      if ($request_method = 'OPTIONS') {

        add_header Access-Control-Allow-Origin *;

        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";

        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";

        add_header Content-Length 0;

        add_header Content-Type text/plain;

        return 204;

      }

    }



    # WebSocket proxy (development)

    location /ws/ {

      proxy_pass http://localhost:8000/ws/;

      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;

      proxy_set_header Connection "upgrade";

      proxy_set_header Host $host;

      proxy_set_header X-Real-IP $remote_addr;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header X-Forwarded-Proto $scheme;

    }



    # Handle React Router (SPA)

    location / {

      try_files $uri $uri/ /index.html;

    }

  }

}